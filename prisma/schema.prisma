generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Item {
  id                     Int        @id @default(autoincrement())
  name                   String
  value                  Int
  isEquippable           Boolean
  maxStack               Int
  rarity                 Rarity
  equippedByCharacterId  Int?
  inventoryOfCharacterId Int?
  equippedBy             Character? @relation("EquippedItems", fields: [equippedByCharacterId], references: [id])
  inventoryOf            Character? @relation("InventoryItems", fields: [inventoryOfCharacterId], references: [id])
  stats                  ItemStat[] @relation("ItemStats")

  @@index([equippedByCharacterId], map: "Item_equippedByCharacterId_fkey")
  @@index([inventoryOfCharacterId], map: "Item_inventoryOfCharacterId_fkey")
}

model ItemStat {
  id                  Int    @id @default(autoincrement())
  healthBonus         Int?
  attackBonus         Int?
  defenseBonus        Int?
  critChanceBonus     Float?
  critMultiplierBonus Float?
  evasionBonus        Float?
  accuracyBonus       Float?
  itemId              Int
  item                Item   @relation("ItemStats", fields: [itemId], references: [id], onDelete: Cascade)

  @@index([itemId], map: "ItemStat_itemId_fkey")
}

model User {
  id                  Int         @id @default(autoincrement())
  username            String      @unique
  password            String
  nickname            String
  role                String
  selectedCharacterId Int?
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  characters          Character[] @relation("UserCharacters")
}

model Character {
  id             Int    @id @default(autoincrement())
  name           String @unique
  health         Int    @default(0)
  attackPower    Int    @default(0)
  defense        Int    @default(0)
  critChance     Float  @default(0)
  critMultiplier Float  @default(0)
  evasion        Float  @default(0)
  accuracy       Float  @default(0)
  expGainRate    Float  @default(0)
  goldGainRate   Float  @default(0)
  gold           Int    @default(10000)
  ownerId        Int
  owner          User   @relation("UserCharacters", fields: [ownerId], references: [id])
  equippedItems  Item[] @relation("EquippedItems")
  inventoryItems Item[] @relation("InventoryItems")
  @@index([ownerId], map: "Character_ownerId_fkey")
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  EPIC
  LEGENDARY
}
